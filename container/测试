
多测试而非调试
传统测试

assertEquals(3,add(1,2)) 期待值,计算值

这个方法将测试逻辑与结果混在一起

如果报了出错 那么需要去看是参数错误还是算法错误 出错信息不明确  而且一旦一个数据出错 测试全部结束

------------------------------------------------------------------------------------------------

表格驱动测试

参数和结果通过表格的形式写在一起

数组test
{1,2,3},
{0,2,2},
....

actual:=add(test.a,test.b);

分离测试数据和逻辑

可以部分失败


BenchMark性能测试


------------------------------------------------------------------------------------------------
命令行

go test .  将当前目录所有测试运行一遍

go test -coverprofile=c.out 将覆盖率情况写到c.out文件里

go tool cover -html=c.out  将覆盖率结果转为html查看

go  test -bench .  将目录所有测试 执行性能测试

go test -bench . -cpuprofile cpu.out  将性能测试的cpu结果输出

go tool pprof cpu.out  出现交互式命令行   再输入web可以在网页上看到 各个部分的执行时间 方框越大耗时越多

